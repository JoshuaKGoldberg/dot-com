---
import { Image } from 'astro:assets'

export interface ColorSchemeImages {
	dark: ImageMetadata;
	light: ImageMetadata;
}

// TODO: can we make this importable from astro:assets? Do we want to?
export type HeroImageAsset = ImageMetadata | ColorSchemeImages;

export interface Props {
	alt: string;
	asset: HeroImageAsset
	class?: string | undefined;
	size: "small" | "large";
}

const asset =
	"src" in Astro.props.asset
		? { dark: Astro.props.asset, light: Astro.props.asset }
		: Astro.props.asset;

---

<div class:list={["heroImage", Astro.props.class, Astro.props.size]}>
	<picture>
		{/* TODO (ask around): can the image be made responsive? Do I want it to be? */}
		<source srcset={asset.dark.src} media="(prefers-color-scheme: dark)" />
		<source srcset={asset.light.src} media="(prefers-color-scheme: light)" />
		<Image alt={Astro.props.alt} class={Astro.props.size} src={asset.light} />
	</picture>
</div>

<style>
	.heroImage,
	img {
		height: var(--imageSize);
		width: var(--imageSize);
	}

	.heroImage.small {
		--imageSize: clamp(4rem, 12vw, 8rem);
	}

	.heroImage.large {
		--imageSize: clamp(8rem, 20vw, 10rem);
	}

	img {
		border-radius: 100%;
		box-shadow: 0 3px 7px 3px var(--colorSubtle);
		user-select: none;
	}

	@media (min-width: 700px) {
		.heroImage.small {
			--imageSize: 128px;
		}

		.heroImage.large {
			--imageSize: clamp(12rem, 32vw, 16rem);
		}

		img {
			max-height: 100%;
			max-width: 100%;
			box-shadow: 0 3px 14px 0 var(--colorSubtle);
		}
	}

	@media (min-width: 1017px) {
		.heroImage.large {
			--imageSize: 256px;
		}
	}
</style>
