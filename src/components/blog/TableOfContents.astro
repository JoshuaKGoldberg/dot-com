---
import type { MarkdownHeading } from "astro";
import { Squiggly } from "../Squiggly";
import { Text } from "../Text";

interface Props {
	headings: MarkdownHeading[];
}

interface HeadingGroup {
	h2: MarkdownHeading;
	h3s: MarkdownHeading[];
}

const headingGroups: HeadingGroup[] = [
	{
		h2: Astro.props.headings[0],
		h3s: [],
	},
];

for (const heading of Astro.props.headings.slice(1)) {
	if (heading.depth === 2) {
		headingGroups.push({
			h2: heading,
			h3s: [],
		});
	} else {
		headingGroups[headingGroups.length - 1].h3s.push(heading);
	}
}
---

<label class="toggle">
	<input type="checkbox" value="Expand table of contents" />
	<Squiggly as="span" fontSize="smaller">Table of Contents</Squiggly>
</label>
<nav class="tableOfContents">
	<ol class="tableRoot">
		{
			headingGroups.map(({ h2, h3s }) => (
				<li>
					<Text as="a" fontWeight="light" href={`#${h2.slug}`}>
						{h2.text}
					</Text>
					{h3s.length ? (
						<ol>
							{h3s.map((h3) => (
								<li>
									<Text as="a" fontWeight="light" href={`#${h3.slug}`}>
										{h3.text}
									</Text>
								</li>
							))}
						</ol>
					) : null}
				</li>
			))
		}
	</ol>
</nav>

<style>
	.toggle {
		cursor: pointer;
		background: none;
		border: none;
		float: left;

		/* Compensates for the squiggly, so this is aligned on top of the horizontal bar */
		margin-bottom: 0.125rem;
	}

	.toggle input {
		display: none;
	}

	.tableOfContents {
		max-height: 0;
		overflow: hidden;
		transition: max-height var(--transitionSlow);
		width: 100%;
	}

	.toggle:has(:checked) + .tableOfContents {
		max-height: 100vh;
	}

	.tableRoot {
		--gapVertical: 0.75rem;
		padding: 1rem 0 0.5rem;
		width: 100%;
	}

	ol {
		display: flex;
		gap: var(--gapVertical);
		flex-direction: column;
	}

	.tableRoot ol {
		margin-left: 1rem;
		padding-left: 0;
		font-size: 90%;
	}

	li {
		list-style-type: none;
	}

	.tableRoot ol li:first-of-type {
		margin-top: var(--gapVertical);
	}

	a {
		opacity: 0.7;
		transition: var(--transitionMedium) opacity;
	}

	a:hover {
		opacity: 1;
	}

	@media (min-width: 700px) {
		.toggle {
			margin-top: 1.5rem;
		}
	}

	@media (min-width: 1017px) {
		.toggle {
			display: none;
		}

		.tableOfContents {
			--widthLeftPadding: 3rem;
			left: calc(var(--widthSlim) + var(--widthLeftPadding));
			max-height: initial;
			position: absolute;
		}

		.tableRoot {
			overflow-y: auto;
			position: fixed;
			top: 6rem;
			width: var(--widthTableOfContents);
			bottom: -0.9rem;
			z-index: 1;
		}
	}
</style>
