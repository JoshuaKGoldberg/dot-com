---
import type { MarkdownHeading } from "astro";
import { Text } from "../Text";

interface Props {
	headings: MarkdownHeading[];
}

interface HeadingGroup {
	h2: MarkdownHeading;
	h3s: MarkdownHeading[];
}

const headingGroups: HeadingGroup[] = [
	{
		h2: Astro.props.headings[0],
		h3s: [],
	},
];

for (const heading of Astro.props.headings.slice(1)) {
	if (heading.depth === 2) {
		headingGroups.push({
			h2: heading,
			h3s: [],
		});
	} else {
		headingGroups[headingGroups.length - 1].h3s.push(heading);
	}
}
---

<div class="tableOfContents">
	<ol class="root">
		{
			headingGroups.map(({ h2, h3s }) => (
				<li>
					<Text as="a" fontWeight="light" href={`#${h2.slug}`}>
						{h2.text}
					</Text>
					{h3s.length ? (
						<ol>
							{h3s.map((h3) => (
								<li>
									<Text as="a" fontWeight="light" href={`#${h3.slug}`}>
										{h3.text}
									</Text>
								</li>
							))}
						</ol>
					) : null}
				</li>
			))
		}
	</ol>
</div>

<div id="container">
	<div id="square"></div>
	<div id="stretcher"></div>
</div>

<style>
	.root {
		--gapVertical: 0.75rem;
		overflow-y: auto;
		padding-left: 0;
	}

	ol {
		display: flex;
		gap: var(--gapVertical);
		flex-direction: column;
	}

	.root ol {
		margin-left: 1rem;
		padding-left: 0;
		font-size: 90%;
	}

	li {
		list-style-type: none;
	}

	.root ol li:first-of-type {
		margin-top: var(--gapVertical);
	}

	a {
		transition: 280ms color;
	}

	a:hover {
		color: var(--colorEmphasized);
	}

	@media (min-width: 1017px) {
		.root {
			bottom: 0;
			margin: 0;
			padding: 0.25rem 0 0.25rem calc(var(--widthLeftPadding) / 2);
			position: fixed;
			top: 5rem;
			width: calc(var(--widthTableOfContents) - var(--widthLeftPadding));
		}

		.tableOfContents {
			--widthLeftPadding: 3rem;
			left: calc(100% - var(--widthTableOfContents) + var(--widthLeftPadding));
			position: absolute;
			bottom: 1rem;
			top: 0;
			opacity: 0.7;
			transition: 280ms opacity;
			z-index: 1;
		}

		.tableOfContents:focus-within,
		.tableOfContents:hover {
			opacity: 1;
		}

		.root {
			border-left: 1px solid var(--colorSubtle);
		}
	}
</style>
