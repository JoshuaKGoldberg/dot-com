---
import type { ImageMetadata } from "astro";

import HeroImage from "../HeroImage.astro";
import HeroSecondary from "../HeroSecondary.astro";
import HeroTertiary from "../HeroTertiary.astro";
import HeroTitle from "../HeroTitle.astro";
import BlogShare from "./BlogShare.astro";
import { DateAndMinutes } from "./DateAndMinutes";

export interface BlogImage {
	alt: string;
	src: ImageMetadata;
}

interface Props {
	body: string;
	class?: string | undefined;
	date: Date;
	description: string;
	download?: string | undefined;
	image: BlogImage;
	title: string;
}
---

<div class:list={["blogHero", Astro.props.class]}>
	<div class="left">
		<div class="primary">
			<div class="hero-image">
				<HeroImage class="image" size="small" {...Astro.props.image} />
			</div>
			<div class="hero-title">
				<HeroTitle>
					{
						Astro.props.title
							// TODO: use a markdown renderer
							.replaceAll("`", "")
					}
				</HeroTitle>
			</div>
			<div class="hero-tertiary">
				<HeroTertiary>
					<DateAndMinutes
						body={Astro.props.body}
						date={Astro.props.date}
						year="numeric"
					>
						<BlogShare
							description={Astro.props.description}
							title={Astro.props.title}
							url={Astro.url}
						/>
					</DateAndMinutes>
				</HeroTertiary>
			</div>
		</div>
		<HeroSecondary size="wide">
			{Astro.props.description}
		</HeroSecondary>
	</div>
	{
		Astro.props.download && (
			<div class="download">
				ðŸ’¾
				<a
					href={Astro.props.download}
					rel="noopener noreferrer"
					target="_blank"
				>
					Download the slides here!
				</a>
			</div>
		)
	}
</div>

<style>
	.primary {
		width: 100%;
	}

	.hero-image {
		float: right;
		margin-left: 0.1rem;
	}

	.download {
		margin-top: 1.5rem;
	}

	@media (min-width: 490px) {
		.primary {
			--imageSize: var(--heroSizeSmall);

			display: grid;
			column-gap: 0.5rem;
			grid-template-columns: auto var(--imageSize);
			grid-template-rows: max-content max-content auto;
		}

		.hero-image {
			grid-column: 2;
			grid-row: 1 / 3;
			display: flex;
			justify-content: flex-end;
			margin-left: 0;
		}

		.hero-title {
			display: flex;
			flex-direction: column;
			justify-content: center;
		}

		.hero-tertiary {
			grid-column: 1 / 3;
			grid-row: 2;
		}
	}

	@media (min-width: 700px) {
		.primary {
			grid-template-columns: var(--imageSize) auto;
			grid-template-rows: auto;
			margin-bottom: 1.5rem;
			column-gap: 1.5rem;
		}

		.primary {
			grid-column: 2;
		}

		.hero-image {
			grid-column: 1;
		}

		.hero-tertiary {
			grid-column: 2;
		}
	}

	@media (min-width: 1017px) {
		.blogHero {
			margin-right: var(--widthTableOfContents);
		}
	}
</style>
