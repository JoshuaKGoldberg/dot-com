---
import MediaOriginalNote, {
	type MediaOriginal,
} from "./MediaOriginalNote.astro";

export interface Props {
	class?: string | undefined;
	description?: string | string[] | undefined;
	note?: string | undefined;
	original?: MediaOriginal | string | undefined;
}

const descriptions =
	Astro.props.description === undefined ||
	Array.isArray(Astro.props.description)
		? Astro.props.description
		: [Astro.props.description];
---

<label class="labeled-media-media">
	<slot />
	<small class="labeled-media-small">
		{
			descriptions?.map((description) => (
				<span class="labeled-media-description">{description}</span>
			))
		}
		{
			Astro.props.original && (
				<MediaOriginalNote original={Astro.props.original} />
			)
		}
		{Astro.props.note && <em class="labeled-media-note">{Astro.props.note}</em>}
	</small>
</label>

<style is:inline>
	.labeled-media-media {
		display: block;
		margin: 1rem 0;
		text-align: center;
	}

	.labeled-media-small {
		display: block;
		margin-top: 1rem;
	}

	.labeled-media-note {
		font-size: 0.9em;
		padding-bottom: 1rem;
		width: 100%;
	}

	.labeled-media-original::after {
		content: "]";
	}

	.labeled-media-original::before {
		content: "[";
	}

	/* Ideally these would be in a LoopVideo.module.css... */
	/* https://github.com/JoshuaKGoldberg/dot-com/issues/190 */
	.labeled-media-media video {
		margin: auto;
		max-height: fit-content;
		max-width: fit-content;
		width: 100%;
	}
</style>
