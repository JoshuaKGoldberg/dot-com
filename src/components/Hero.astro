---
const sizes = {
	medium: "heroMedium",
	large: "heroLarge",
};

export interface ColorSchemeImages {
	dark: string;
	light: string;
}

export interface Props {
	class?: string | undefined;
	image: string | ColorSchemeImages;
	size?: keyof typeof sizes;
}

const { class: className, image, size = "medium" } = Astro.props;
const images =
	typeof image === "string" ? { dark: image, light: image } : image;
---

<div class:list={["hero", sizes[size], className]}>
	<div class="half first">
		<picture >
			<source srcset={images.dark} media="(prefers-color-scheme: dark)" />
			<source srcset={images.light} media="(prefers-color-scheme: light)" />
			<img alt="" src={images.light} />
		</picture>
	</div>
	<div class="half second">
		<slot />
	</div>
</div>

<style>
	.hero {
		display: flex;
		justify-content: center;
		margin: 3rem auto 5rem;
		padding: 1rem 2rem;
		text-align: center;
		position: relative;
	}

	picture {
		display: none;
	}

	@media (min-width: 819px) {
		.hero {
			gap: 2rem;
			margin-top: 3rem;
			margin-bottom: 5rem;
			text-align: left;
		}

		.heroMedium {
			height: 20rem;
		}

		.heroLarge {
			height: 25rem;
		}

		.half {
			position: relative;
		}

		.half.first {
			display: flex;
			justify-content: flex-end;
			width: 45%;
		}

		.half.second {
			display: flex;
			flex-direction: column;
			align-items: flex-start;
			justify-content: center;
			width: 55%;
		}

		picture {
			display: block;
			max-width: 100%;
			max-height: 100%;
			user-select: none;
		}

		img {
			height: 100%;
			width: 100%;
		}
	}
</style>
